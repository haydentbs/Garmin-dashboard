services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: garmin
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: garmin
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  data_pull:
    build:
      context: ./garmin_data_pull
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: garmin
      POSTGRES_PASSWORD: garmin
      POSTGRES_USER: postgres
    volumes:
      - ./garmin_data_pull:/app
    command: ["python", "-u", "main.py"]
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  api:
    build:
      context: ./backend
    ports:
     - "5001:5001"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: garmin
      POSTGRES_PASSWORD: garmin
      POSTGRES_USER: postgres
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

# Add this volumes section at the bottom
volumes:
  pgdata:
